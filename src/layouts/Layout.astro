---
import Header from '../components/Header.astro';
import Favicon from '../../src/assets/logo.png';
import BlobAnimation from '../components/Background';
import '../style/header.css';
import type { load } from '../js/spline/opentype';
import AOS from 'aos';
import 'aos/dist/aos.css';





import valogo  from '../../src/assets/logovaDEV.svg';
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href={Favicon.src} />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<style>

span {
  overflow: hidden;
  display: block;
}
.loader-wrap {
  position: fixed;
  z-index: 10;
  height: 100vh;
  width: 100%;
  display: flex;
  overflow: hidden;
  align-items: center;
  justify-content: center;
  background: transparent;
}
.loader-wrap svg {
  position: absolute;
  top: 0;
  width: 100vw;
  height: 110vh;
  stroke: none;
}
.loader-wrap .loader-wrap-heading img {
  width: 200px;
}
.container {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  width: 100%;
}

@media (max-width: 767px) {
  .loader-wrap svg {
    width: 200vw;
    margin-left: -50vw;
  }
  .loader-wrap .loader-wrap-heading,
  .container h1 {
    font-size: 60px;
  }
}

	</style>
	 <body>
		<div class="loader-wrap">
		  <svg viewBox="0 0 1000 1000" preserveAspectRatio="none">
			<path id="svg" d="M0,1005S175,995,500,995s500,5,500,5V0H0Z"></path>
		  </svg>
	
		  <div class="loader-wrap-heading">
			<img src={valogo.src} alt="">
		  </div>
		</div>
		<BlobAnimation client:only>
		
		</BlobAnimation> 
		<Header></Header>

		 <main class="main">
			<slot />
		</main>		
		
		
	  </body>

	<script >

import { gsap } from "gsap/dist/gsap";


const svg = document.getElementById('svg');
const tl = gsap.timeline({
  onComplete: () => {
    document.body.style.overflow = 'visible';
  },
});

const curve = 'M0 502S175 272 500 272s500 230 500 230V0H0Z';
const flat = 'M0 2S175 1 500 1s500 1 500 1V0H0Z';

tl.from('.loader-wrap-heading img', {
  delay: 0.8,
  y: 200,
}).to('.loader-wrap-heading img', {
  delay: 0.5,
  y: -200,
  opacity: 0
});
tl.to(svg, {
  duration: 0.8,
  attr: { d: curve },
  ease: 'power2.easeIn',
}).to(svg, {
  duration: 0.8,
  attr: { d: flat },
  ease: 'power2.easeOut',
});
tl.to('.loader-wrap', {
  y: -1500,
});
tl.to('.loader-wrap', {
  zIndex: -1,
  display: 'none',
});



tl.from(
  'nav',
  {
    duration: 1,
    opacity: 0,
  },
  '-=1.2'
);
	</script>
</html>
